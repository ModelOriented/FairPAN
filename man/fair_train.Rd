% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fair_train.R
\name{fair_train}
\alias{fair_train}
\title{Proceeds with fair training with PAN model}
\usage{
fair_train(
  train_x,
  test_x,
  train_y,
  test_y,
  sensitive_train,
  sensitive_test,
  data_scaled_test,
  protected,
  priviliged,
  data,
  batch_size = 50,
  partition = 0.7,
  neurons_clf = c(32, 32, 32),
  neurons_adv = c(32, 32, 32),
  dimension_clf = 2,
  dimension_adv = 2,
  learning_rate_clf = 0.001,
  learning_rate_adv = 0.001,
  n_ep_preclf = 5,
  n_ep_only = 30,
  n_ep_preadv = 10,
  n_ep_pan = 50,
  lambda = 50
)
}
\arguments{
\item{train_x}{numeric, scaled matrix of predictors used for training}

\item{test_x}{integer, matrix of predictors used for testing}

\item{train_y}{numeric, scaled vector of target used for training}

\item{test_y}{integer, vector of predictors used for testing}

\item{sensitive_train}{integer, vector of sensitive values used for training}

\item{sensitive_test}{integer, vector of sensitive values used for testing}

\item{data_scaled_test}{scaled matrix of numerical values representing predictors}

\item{protected}{numerical vector of sensitive variables}

\item{priviliged}{string label of privileged class in protected}

\item{data}{numerical table of predictors}

\item{batch_size}{integer indicating a batch size used in dataloader. Default: 50}

\item{partition}{float from [0,1] range setting the size of train vector (test size
equals 1-partition). Default = 0.7.}

\item{neurons_clf}{integer vector describing a neural architecture of classifier
network. Default: c(32,32,32). This notation means that the network
has 3 layers with 32 neurons each.}

\item{neurons_adv}{integer vector describing a neural architecture of adversarial
network. Default: c(32,32,32). This notation means that the network
has 3 layers with 32 neurons each.}

\item{dimension_clf}{integer from [0,2] setting nnf_softmax dimension for classifier.
Default: 2}

\item{dimension_adv}{integer from [0,2] setting nnf_softmax dimension for adversarial.
Default: 2}

\item{learning_rate_clf}{float from [0,1] setting learning rate for classifier.
Default: 0.001}

\item{learning_rate_adv}{float from [0,1] setting learning rate for classifier.
Default: 0.001}

\item{n_ep_preclf}{integer setting number of epochs for preclassifiers training.
Default: 5}

\item{n_ep_only}{integer setting number of epochs for classifier only training.
Default: 30}

\item{n_ep_preadv}{integer setting number of epochs for preadversarials training.
Default : 10}

\item{n_ep_pan}{integer setting number of epochs for PAN training. Default : 50}

\item{lambda}{integer parameter regulating learning proccess (intuition: the bigger it is,
the fairer predictions). Default: 50}
}
\description{
Core function of the whole package. It trains a PAN model with fair predictions.
}
