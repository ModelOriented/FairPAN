% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/train_PAN.R
\name{train_PAN}
\alias{train_PAN}
\title{Trains PAN model}
\usage{
train_PAN(
  N_EP_PAN,
  dsl,
  clf_model,
  adv_model,
  dev,
  sensitive_train,
  sensitive_test,
  BATCH_SIZE,
  LEARNING_RATE_ADV,
  LEARNING_RATE_CLF,
  LAMBDA
)
}
\arguments{
\item{N_EP_PAN}{number of epochs for PAN training}

\item{dsl}{dataset_loader object for classificator network}

\item{clf_model}{classifier model (preferably after pretrain)}

\item{adv_model}{adversarial model (preferably after pretrain)}

\item{dev}{device used to computation ("cuda" or "cpu")}

\item{sensitive_train}{integer vector of sensitive attribute used for training}

\item{BATCH_SIZE}{batch size used in adversarials dataset_loader}

\item{LEARNING_RATE_ADV}{learning rate of adversarial}

\item{LEARNING_RATE_CLF}{learning rate of classifier}

\item{LAMBDA}{parameter regulating learning proccess (intuition: the bigger it is,
the fairer predictions).}

\item{sensitive_testnteger}{vector of sensitive attribute used for testing}
}
\value{

}
\description{
Trains Predictive Adversarial Network model, which means that it proceeds with the
mutual training of adverssarial on whole data set and classifier on a single mini batch.
The result is a fairer classifier.
}
